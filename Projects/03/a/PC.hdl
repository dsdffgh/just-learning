// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
	//Not(in = reset, out = notreset);
	//Not(in = load, out = notload);
	Inc16(in = outval, out = outplus1);
	
	//when reset=0 and load=0,inc is vaild
	//And(a = notreset, b = notload, out = incprev);
	//And(a = incprev, b = inc, out = incflag);
	
	//when reset=0,irrelevant to the status of inc,load is vaild
	//And(a = notreset, b = load, out = loadflag);
	
	Mux16(a = outval, b = outplus1, sel = inc, out = toinc);
	Mux16(a = toinc, b = in, sel = load, out = toload);
	Mux16(a = toload, b = false, sel = reset, out = outpre);
	
	Or(a = reset, b = load, out = controlpre);
	Or(a = controlpre, b = inc, out = control);
	
	Register(in = outpre, load = control, out = outval);
	And16(a = outval, b = outval, out = out);
}